{"version":3,"sources":["actions/types.js","reducers/index.js","reducers/reducers.js","pages/Home/components/Home.js","actions/profileActions.js","pages/Profile/components/LanguageItem.js","pages/Profile/components/SocialItem.js","pages/Profile/components/Profile.js","actions/newsActions.js","pages/News/components/NewsItem.js","pages/News/components/Loading.js","pages/News/components/Error.js","pages/News/components/News.js","actions/loginActions.js","pages/Authorize/components/Loading.js","pages/Authorize/components/Authorize.js","pages/Authorize/components/Logout.js","actions/modalActions.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_NEWS_REQUEST","FETCH_NEWS_SUCCESS","FETCH_NEWS_FAILURE","FETCH_LOGIN_REQUEST","FETCH_LOGIN_SUCCESS","FETCH_LOGIN_FAILURE","FETCH_PROFILE_REQUEST","FETCH_PROFILE_SUCCESS","FETCH_PROFILE_FAILURE","OPEN_MODAL","CLOSE_MODAL","LOG_OUT","initialState","newsData","news","error","isLoading","pageIsEmpty","validation","isLogged","userId","userProfile","info","logoutModal","modalIsOpen","combineReducers","state","arguments","length","undefined","action","type","types","Object","objectSpread","payload","concat","toConsumableArray","Home","react_default","a","createElement","className","id","Component","apiURL","errorMsg","fetchProfileFailure","ex","getProfile","credentials","dispatch","fetch","then","res","json","body","status","fetchProfileSuccess","data","catch","LanguageItem","_ref","languageItem","SocialItem","socialItem","label","Profile","this","props","console","log","_this$props","languageItems","languages","map","index","components_LanguageItem","key","socialItems","social","components_SocialItem","city","connect","fetchNews","fetchNewsSuccess","NewsItem","newsItem","title","text","Loading","Error","News","newsItems","components_NewsItem","components_Loading","components_Error","fetchLoginFailure","getUserInfo","method","JSON","stringify","email","username","password","headers","content-type","fetchLoginSuccess","Authorize","context","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","e","_this$state","resetFields","defineProperty","target","name","value","_this$state2","Authorize_components_Loading","onChange","handleChange","bind","onClick","handleClick","react_router","to","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","Logout","redirectStayLogged","redirectToHomepage","openModal","closeModal","prevState","logOut","lib_default","isOpen","onRequestClose","style","contentLabel","confirmLogout","history","createBrowserHistory","App","assertThisInitialized","afterOpenModal","preventDefault","react_router_dom","exact","activeClassName","path","component","Boolean","window","location","hostname","match","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f19face.chunk.js","sourcesContent":["export const FETCH_NEWS_REQUEST = 'FETCH_NEWS_REQUEST';\nexport const FETCH_NEWS_SUCCESS = 'FETCH_NEWS_SUCCESS';\nexport const FETCH_NEWS_FAILURE = 'FETCH_NEWS_FAILURE';\n\nexport const FETCH_LOGIN_REQUEST = 'FETCH_LOGIN_REQUEST';\nexport const FETCH_LOGIN_SUCCESS = 'FETCH_LOGIN_SUCCESS';\nexport const FETCH_LOGIN_FAILURE = 'FETCH_LOGIN_FAILURE';\n\nexport const FETCH_PROFILE_REQUEST = 'FETCH_PROFILE_REQUEST';\nexport const FETCH_PROFILE_SUCCESS = 'FETCH_PROFILE_SUCCESS';\nexport const FETCH_PROFILE_FAILURE = 'FETCH_PROFILE_FAILURE';\n\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const LOG_OUT = 'LOG_OUT';\n\n\n","import { combineReducers } from 'redux';\nimport { newsData, validation, userProfile, logoutModal } from './reducers';\n\nexport const initialState = {\n    newsData: {\n        news: [],\n        error: \"\",\n        isLoading: false,\n        pageIsEmpty: true\n    },\n    validation: {\n        isLogged: false,\n        error: \"\",\n        isLoading: false,\n        userId: 0\n    },\n    userProfile: {\n        info: {},\n        error: \"\",\n        isLoading: false,\n    },\n    logoutModal: {\n        modalIsOpen: false\n    }\n};\n\nexport default combineReducers({\n    newsData,\n    validation,\n    userProfile,\n    logoutModal,\n})","import * as types from '../actions/types';\nimport { initialState } from './index';\n\nexport const newsData = (state = initialState.newsData, action) => {\n    switch (action.type) {\n        case types.FETCH_NEWS_REQUEST:\n            //console.log('in FETCH_NEWS_REQUEST', state);\n            return {\n                ...state,\n                isLoading: true,\n                error: \"\"\n            };\n        case types.FETCH_NEWS_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload,\n            };\n        case types.FETCH_NEWS_SUCCESS:\n            //console.log('in reducer success ', action.payload, state); //array of 2 objects\n            return {\n                ...state,\n                news: [...state.news, ...action.payload],\n                isLoading: false,\n                error: \"\",\n                pageIsEmpty: false\n            };\n        default:\n            return state\n    }\n};\n\nexport const validation = (state = initialState.validation, action) => {\n    switch (action.type) {\n        case types.FETCH_LOGIN_REQUEST:\n            //console.log('in FETCH_NEWS_REQUEST');\n            return {\n                ...state,\n                isLogged: false,\n                isLoading: true,\n                error: \"\"\n            };\n        case types.FETCH_LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLogged: true,\n                isLoading: false,\n                error: \"\",\n                userId: action.payload\n            };\n        case types.FETCH_LOGIN_FAILURE:\n            //console.log('in reducer failure ', action.payload);\n            return {\n                ...state,\n                isLogged: false,\n                isLoading: false,\n                error: action.payload,\n                userId: 0\n            };\n        case types.LOG_OUT:\n            //console.log('in reducer failure ', action.payload);\n            return {\n                ...state,\n                isLogged: false,\n                isLoading: false,\n                error: \"\",\n                userId: 0\n            };\n        default:\n            return state\n    }\n};\n\nexport const userProfile = (state = initialState.userProfile, action) => {\n    switch (action.type) {\n        case types.FETCH_PROFILE_REQUEST:\n            //console.log('in FETCH_NEWS_REQUEST');\n            return {\n                ...state,\n                isLoading: true,\n                error: \"\"\n            };\n        case types.FETCH_PROFILE_SUCCESS:\n            //console.log('in userProfile, action = ' + action.payload);\n            return {\n                ...state,\n                isLoading: false,\n                error: \"\",\n                info: {...state.info, ...action.payload},\n            };\n        case types.FETCH_PROFILE_FAILURE:\n            //console.log('in reducer failure ', action.payload);\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload,\n                info: {},\n            };\n        default:\n            return state\n    }\n};\n\nexport const logoutModal = (state = initialState.logoutModal, action) => {\n    switch (action.type) {\n        case types.OPEN_MODAL:\n            //console.log('in FETCH_NEWS_REQUEST');\n            return {\n                ...state,\n                modalIsOpen: true,\n            };\n        case types.CLOSE_MODAL:\n            //console.log('in userProfile, action = ' + action.payload);\n            return {\n                ...state,\n                modalIsOpen: false,\n            };\n        default:\n            return state\n    }\n};","import React, { Component } from 'react';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"page-content\">\n                <h1 id=\"welcome-message\">This is home page!</h1>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import 'cross-fetch/polyfill';\nimport fetch from 'cross-fetch';\nimport * as types from './types';\n\nconst apiURL = \"https://mysterious-reef-29460.herokuapp.com/api/v1/user-info/1\";\nconst errorMsg = \"Server error< please try later!\";\n\nfunction fetchProfileRequest() {\n    return {\n            type: types.FETCH_PROFILE_REQUEST\n    }\n}\n\nfunction fetchProfileSuccess(body) {\n    //console.log('in fetchNewsSuccess, got data ' + body);\n    return {\n        type: types.FETCH_PROFILE_SUCCESS,\n        payload: body\n    }\n}\n\nfunction fetchProfileFailure(ex) {\n    //console.log('error ', ex);\n    return {\n        type: types.FETCH_PROFILE_FAILURE,\n        payload: errorMsg\n    }\n}\n\nexport function getProfile(credentials) {\n    // return (dispatch) => {\n    //     console.log('dispatch', dispatch, 'credentials', credentials);\n    // }\n    return dispatch => {\n        //console.log('got first dispatch in action ', credentials);\n        dispatch(fetchProfileRequest());\n        return fetch(apiURL)\n            .then(res => {\n                //console.log('got result from api, ', res.json());\n                return res.json()})\n            //.then(json => receivePosts(json))\n            .then(body => {\n                //console.log('final data ', body.status);\n                if(body.status === 'ok'){\n                    //console.log('successful payload = ' + body.data.languages);\n                    return dispatch(fetchProfileSuccess(body.data))\n                }\n                return dispatch(fetchProfileFailure());\n            })\n            .catch(ex => dispatch(fetchProfileFailure(ex)))\n    }\n}\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst LanguageItem = ({ languageItem }) => {\n\n    return (\n            <li className=\"language-item\">\n                {languageItem}\n            </li>\n    );\n};\n\nLanguageItem.propTypes = {\n    languageItem: PropTypes.string.isRequired\n};\n\nexport default LanguageItem;\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst SocialItem = ({ socialItem }) => {\n\n    //const imgSrc = \"./\" + `${socialItem.label}` + \".png\";\n\n    return (\n            <li>\n                <span>{socialItem.label} </span>\n\n            </li>\n    );\n};\n\nSocialItem.propTypes = {\n    socialItem: PropTypes.object.isRequired\n};\n\nexport default SocialItem;\n\n//`${API_ROOT}/${endPoint}`\n//                <span><a href={socialItem.link}><img src={imgSrc} width=\"30\" height=\"30\" /></a></span>","import React, { Component } from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport {getProfile} from \"../../../actions/profileActions\";\nimport LanguageItem from \"./LanguageItem\";\nimport SocialItem from \"./SocialItem\";\n\nclass Profile extends Component {\n\n    componentWillMount() {\n        const { userId } = this.props;\n        this.props.getProfile(userId);\n        console.log('getProfile was sent ');\n    }\n\n    render() {\n\n        const { userId, info } = this.props;\n\n        const languageItems = info.languages && info.languages\n            .map(\n                (languageItem, index) => <LanguageItem key={index} languageItem={languageItem}/>\n            );\n\n        const socialItems = info.social && info.social\n            .map(\n                (socialItem, index) => <SocialItem key={index} socialItem={socialItem}/>\n            );\n\n        return (\n            <div className=\"page-content\">\n                {userId ?\n                    <div className=\"userInfo\">\n                        <p>City: {info.city}</p>\n                        <p>Languages: {languageItems}</p>\n                        <p>Links: {socialItems}</p>\n                    </div>\n                    : <h3>Please, log in to get your profile information!</h3>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    userId: state.validation.userId,\n    isLogged: state.validation.isLogged,\n    info: state.userProfile.info,\n});\n\n// const mapStateToProps = (state) => {\n//     console.log('info in component profile' , state.userProfile.info);  //works\n// };\n\nconst mapDispatchToProps = (dispatch) => {\n    //console.log('from Authorize, ', ownProps); //sort by number\n    return {\n        getProfile: (userId) => dispatch(getProfile(userId)),\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Profile)\n\n/*\n\n{ userId && <h1>Welcome to your Profile!</h1> }\n\n                <div className=\"userInfo\">\n                    <p>City: {info.city}</p>\n                    <p>Languages: {languageItems}</p>\n                    <p>Links: {socialItems}</p>\n                </div>\n */","import 'cross-fetch/polyfill';\nimport fetch from 'cross-fetch';\nimport * as types from './types';\n\nconst apiURL = \"https://mysterious-reef-29460.herokuapp.com/api/v1/news\";\n//https://mysterious-reef-29460.herokuapp.com/api/v1/news\nconst errorMsg = \"An error has occurred while sending the request!\";\n\nfunction fetchNewsRequest() {\n    return {\n        type: types.FETCH_NEWS_REQUEST\n    }\n}\n\nfunction fetchNewsSuccess(body) {\n    //console.log('in fetchNewsSuccess ', body);\n    return {\n        type: types.FETCH_NEWS_SUCCESS,\n        payload: body\n    }\n}\n\nfunction fetchNewsFailure(ex) {\n    //console.log('error ', ex);\n    return {\n        type: types.FETCH_NEWS_FAILURE,\n        payload: errorMsg\n    }\n}\n\nexport function fetchNews() {\n    return dispatch => {\n        //console.log('got first dispatch in action');\n        dispatch(fetchNewsRequest());\n        return fetch(apiURL)\n            .then(res => {\n                //console.log('got result from api, ', res.json());\n                //const newsData = res.json();\n                //console.log('result from api ', newsData.data);\n                return res.json()})\n            //.then(json => receivePosts(json))\n            .then(body => {\n                //console.log('final data ', body.data);\n                return dispatch(fetchNewsSuccess(body.data))\n            })\n            .catch(ex => dispatch(fetchNewsFailure(ex)))\n    }\n}\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst NewsItem = ({ newsItem }) => {\n\n    return (\n            <span>\n                <h3>{newsItem.title}</h3>\n                <p>{newsItem.text}</p>\n            </span>\n    );\n};\n\nNewsItem.propTypes = {\n    newsItem: PropTypes.object.isRequired\n};\n\nexport default NewsItem;\n\n","import React from 'react';\n\nconst Loading = () => {\n\n    return (\n            <div>\n                Loading...\n            </div>\n    );\n};\n\nexport default Loading;\n\n","import React from 'react';\n\nconst Error = ({ errorMsg }) => {\n\n    return (\n            <div>\n                { errorMsg }\n            </div>\n    );\n};\n\nexport default Error;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchNews } from '../../../actions/newsActions';\nimport NewsItem from './NewsItem';\nimport Loading from './Loading';\nimport Error from './Error';\n\nclass News extends Component {\n    // constructor(props){\n    //     super(props);\n    //     this.state = {\n    //         pageIsEmpty: true\n    //     }\n    // }\n\n    componentWillMount() {\n        const { pageIsEmpty } = this.props;\n        // const newsItemsList = document.querySelector('#news-items-list');\n        // console.log('selector ', newsItemsList);\n        pageIsEmpty && this.props.fetchNews();\n        //pageIsEmpty && this.setState({pageIsEmpty: false});\n        //console.log('fetchNews was sent ', pageIsEmpty);\n    }\n\n    render() {\n\n        const { news, isLoading, error } = this.props;\n        const newsItems = news && news\n            .map(\n                (newsItem, index) => <NewsItem key={index} newsItem={newsItem}/>\n            );\n\n        return (\n            <div className=\"page-content\">\n                {isLoading ? <Loading/> : error ? <Error errorMsg={error} /> :\n                    <span id=\"news-items-list\">{ newsItems }</span>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    news: state.newsData.news,\n    isLoading: state.newsData.isLoading,\n    error: state.newsData.error,\n    pageIsEmpty: state.newsData.pageIsEmpty,\n    //console.log('in mapStateToProps', state.newsData)  //array is empty, but full in reducer action.payload\n});\n\nconst mapDispatchToProps = dispatch => {\n    //console.log(dispatch, typeof fetchNews());\n    return {\n        fetchNews: () => dispatch(fetchNews())\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(News);","import 'cross-fetch/polyfill';\nimport fetch from 'cross-fetch';\nimport * as types from './types';\n\nconst apiURL = \"https://mysterious-reef-29460.herokuapp.com/api/v1/validate\";\nconst errorMsg = \"Check your username / password and try again, please!\";\n\nfunction fetchLoginRequest() {\n    return {\n        type: types.FETCH_LOGIN_REQUEST\n    }\n}\n\nfunction fetchLoginSuccess(body) {\n    //console.log('in fetchNewsSuccess ');\n    return {\n        type: types.FETCH_LOGIN_SUCCESS,\n        payload: body\n    }\n}\n\nfunction fetchLoginFailure(ex) {\n    //console.log('error ', ex);\n    return {\n        type: types.FETCH_LOGIN_FAILURE,\n        payload: errorMsg\n    }\n}\n\nexport function logOut() {\n    //console.log('error ', ex);\n    return {\n        type: types.LOG_OUT,\n        payload: 0\n    }\n}\n\nexport function getUserInfo(credentials) {\n    // return (dispatch) => {\n    //     console.log('dispatch', dispatch, 'credentials', credentials);\n    // }\n    return dispatch => {\n        //console.log('got first dispatch in action ', credentials);\n        dispatch(fetchLoginRequest());\n        return fetch(apiURL, {\n            method: 'POST',\n            body: JSON.stringify({email: credentials.username, password: credentials.password}),\n            headers: {\n                'content-type': 'application/json'\n            },\n        })\n            .then(res => {\n                //console.log('got result from api, ', res.json());\n                return res.json()})\n            //.then(json => receivePosts(json))\n            .then(body => {\n                //console.log('final data ', body.status);\n                if(body.status === 'ok'){\n                    //console.log('successful payload = ' + body.data.id);\n                    return dispatch(fetchLoginSuccess(body.data.id))\n                }\n                return dispatch(fetchLoginFailure());\n            })\n            .catch(ex => dispatch(fetchLoginFailure(ex)))\n    }\n}\n\n","import React from 'react';\n\nconst Loading = () => {\n\n    return (\n            <div>\n                Loading...\n            </div>\n    );\n};\n\nexport default Loading;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { getUserInfo } from '../../../actions/loginActions';\nimport Loading from './Loading';\n\nclass Authorize extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            username: '',\n            password: ''\n        };\n    }\n\n    resetFields() {\n        //console.log('in resetFields');\n        this.setState({\n            username: \"\",\n            password: \"\"\n        });\n    }\n\n    handleClick(e) {\n        const { username, password } = this.state;\n        //console.log('click from form');\n        //console.log('username ' + username + ' password ' + password, this.props.getProfile);\n        this.props.getUserInfo({username, password});\n        this.resetFields();\n        //this.props.isLogged ? console.log('from handleClick, isLogged = true') : console.log('from handleClick, isLogged undefined');\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    render() {\n\n        const { isLoading, error, isLogged } = this.props;\n        const { username, password } = this.state;\n\n        return (\n            <div className=\"page-content\">\n\n                {isLoading ? <Loading /> :\n                    <span>\n\n                        <h1>\n                            <div className=\"form-item\">Please, log in!</div>\n                        </h1>\n\n                        < form id=\"validation-form\" method=\"post\" name=\"validationForm\">\n                            <div className=\"form-item\">\n                                <label className=\"form-label\">User Name </label>\n                                <input type=\"text\" name=\"username\" id=\"username\" value={ username } onChange={this.handleChange.bind(this)}/>\n                            </div>\n                            <div className=\"form-item\">\n                                <label className=\"form-label\">Password </label>\n                                <input type=\"password\" name=\"password\" id=\"password\" value= { password } onChange={this.handleChange.bind(this)}/>\n                            </div>\n                            <div className=\"form-item\"><input type=\"button\" value=\"Login\" id=\"submit-form-button\" onClick={this.handleClick.bind(this)}/></div>\n                        </form>\n\n                        <div>{!!error && error}</div>\n\n                        {isLogged && <Redirect to=\"/profile\"/>}\n\n                    </span>\n                }\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isLogged: state.validation.isLogged,\n    isLoading: state.validation.isLoading,\n    error: state.validation.error\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    //console.log('from Authorize, ', ownProps); //sort by number\n    return {\n        getUserInfo: (data) => dispatch(getUserInfo(data)),\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Authorize)\n\n//email = 'max@test.com', password = '12345'\n//https://mysterious-reef-29460.herokuapp.com/api/v1/validate","import React, { Component } from 'react';\nimport Modal from \"react-modal\";\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { openModal , closeModal } from '../../../actions/modalActions';\nimport { logOut } from '../../../actions/loginActions';\n\nconst customStyles = {\n    content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('body');\n\nclass Logout extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirectStayLogged: false,\n            redirectToHomepage: false\n        };\n    }\n\n    componentWillMount() {\n        this.props.openModal();\n        console.log('openModal was sent from Logout')\n    }\n\n    closeModal() {\n        this.props.closeModal();\n        this.setState(prevState => ({ redirectStayLogged: !prevState.redirectStayLogged }))\n    }\n\n    confirmLogout(e) {\n        console.log('click from Modal');\n        this.props.logOut();\n        this.setState(prevState => ({ redirectToHomepage: !prevState.redirectToHomepage }))\n    }\n\n    render() {\n\n        return (\n            <div className=\"page-content\">\n\n                <Modal\n                    isOpen={this.props.modalIsOpen}\n                    //onAfterOpen={this.afterOpenModal}\n                    onRequestClose={this.closeModal}\n                    style={customStyles}\n                    contentLabel=\"Example Modal\"\n                >\n                    <button id=\"close-modal-button\" onClick={this.closeModal.bind(this)}>X</button>\n                    <div>Are you sure you want to log out?</div>\n                    <button id=\"confirm-modal-button\" onClick={this.confirmLogout.bind(this)}>Yes, I'm sure!</button>\n                </Modal>\n\n                {this.state.redirectStayLogged &&  <Redirect to=\"/profile\"/>}\n                {this.state.redirectToHomepage &&  <Redirect to=\"/\"/>}\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    modalIsOpen: state.logoutModal.modalIsOpen,\n    userId: state.validation.userId,\n});\n\n// const mapStateToProps = (state) => {\n//     console.log(\"!!!!! \" + state.logoutModal.modalIsOpen)\n//     return {modalIsOpen: state.logoutModal.modalIsOpen}\n// };\n\nconst mapDispatchToProps = (dispatch) => {\n    //console.log('from Authorize, ', ownProps); //sort by number\n    return {\n        openModal: () => dispatch(openModal()),\n        closeModal: () => dispatch(closeModal()),\n        logOut: () => dispatch(logOut()),\n\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Logout)\n\n// const Logout = () => {\n//\n//     return (\n//         <div className=\"page-content\">\n//             logout page\n//             <Modal isOpen={isOpen} style={customStyles}/>\n//         </div>\n//     );\n// };\n\n// SocialItem.propTypes = {\n//     socialItem: PropTypes.object.isRequired\n// };\n\n//export default Logout;","import * as types from './types';\n\n// const apiURL = \"https://mysterious-reef-29460.herokuapp.com/api/v1/user-info/1\";\n// const errorMsg = \"Server error< please try later!\";\n\nexport function openModal() {\n    console.log('in openModal action');\n    return {\n            type: types.OPEN_MODAL\n    }\n}\n\n// function afterOpenModal(body) {\n//     //console.log('in fetchNewsSuccess, got data ' + body);\n//     return {\n//         type: types.AFTER_OPEN_MODAL,\n//         //payload: body\n//     }\n// }\n\nexport function closeModal() {\n    console.log('in closeModal action');\n    return {\n        type: types.CLOSE_MODAL,\n        //payload: errorMsg\n    }\n}\n\n// export function setModal(credentials) {\n//     return dispatch => {\n//         //console.log('got first dispatch in action ', credentials);\n//         dispatch(fetchProfileRequest());\n//         return fetch(apiURL)\n//             .then(res => {\n//                 //console.log('got result from api, ', res.json());\n//                 return res.json()})\n//             //.then(json => receivePosts(json))\n//             .then(body => {\n//                 //console.log('final data ', body.status);\n//                 if(body.status === 'ok'){\n//                     //console.log('successful payload = ' + body.data.languages);\n//                     return dispatch(fetchProfileSuccess(body.data))\n//                 }\n//                 return dispatch(fetchProfileFailure());\n//             })\n//             .catch(ex => dispatch(fetchProfileFailure(ex)))\n//     }\n// }\n\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport Home from './pages/Home/components/Home';\nimport Profile from './pages/Profile/components/Profile';\nimport News from './pages/News/components/News';\nimport Authorize from './pages/Authorize/components/Authorize';\nimport Logout from './pages/Authorize/components/Logout';\nimport './App.css';\nimport connect from \"react-redux/es/connect/connect\";\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            modalIsOpen: false\n        };\n        this.openModal = this.openModal.bind(this);\n        this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    openModal() {\n        this.setState({modalIsOpen: true});\n    }\n\n    afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        //this.subtitle.style.color = '#f00';\n    }\n\n    closeModal() {\n        this.setState({modalIsOpen: false});\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        console.log('click from app');\n    }\n\n    render() {\n\n        const {userId} = this.props;\n\n        return (\n            <BrowserRouter history={history}>\n                <div className=\"flex-container\">\n\n                    <div className=\"flex-container-item\">\n                        <NavLink exact to=\"/\" activeClassName=\"selected\" className=\"link\">Home</NavLink></div>\n                    <div className=\"flex-container-item\">\n                        <NavLink to=\"/profile\" activeClassName=\"selected\" className={userId ? \"link\" : \"disabled-link link\"}>Profile</NavLink>\n                    </div>\n                    <div className=\"flex-container-item\">\n                        <NavLink to=\"/news\" activeClassName=\"selected\" className=\"link\">News</NavLink>\n                    </div>\n                    {!userId && <div className=\"flex-container-item\">\n                        <NavLink to=\"/login\" activeClassName=\"selected\" className=\"link\">Log in</NavLink>\n                    </div>}\n                    {userId && <div className=\"flex-container-item\" onClick={this.handleClick.bind(this)}>\n                        <NavLink to=\"/logout\" className=\"link\">Log out</NavLink>\n                    </div>}\n\n                </div>\n\n                <Route exact path=\"/\" component={Home}></Route>\n                <Route exact path=\"/profile\" component={Profile}></Route>\n                <Route exact path=\"/news\" component={News}></Route>\n                <Route exact path=\"/login\" component={Authorize}></Route>\n                <Route exact path=\"/logout\" component={Logout}></Route>\n\n            </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    userId: state.validation.userId,\n\n});\n\nexport default connect(\n    mapStateToProps,\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//import \"babel-polyfill\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport App from './App';\nimport { initialState } from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}